---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      immich-server:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          enableServiceLinks: false
          nodeSelector:
                  feature.node.kubernetes.io/coral-tpu: "true"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: immich-server
        initContainers:
          init-db:
            image:
              repository: ghcr.io/tparker00/postgres-init
              tag: 16.6@sha256:f588e0718e36b87891cc2cb30a1cd47bba7416e317ec1af51d4ef08939eb514d
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: immich-secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.126.1
            env:
              # General
              LOG_LEVEL: verbose
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              # Ports
              IMMICH_PORT: &port 3001
              IMMICH_METRICS: true
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
                gpu.intel.com/i915: 1
              limits:
                memory: 4096Mi
                gpu.intel.com/i915: 1

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /server-info/ping
                    port: 3001
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /server-info/ping
                    port: 3001
                  failureThreshold: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
      metrics:
        nameOverride: metrics
        controller: *app
        ports:
          metrics:
            port: 8081
      microservices-metrics:
        nameOverride: microservices-metrics
        controller: *app
        ports:
          microservices-metrics:
            port: 8082


    serviceMonitor:
      main:
        enabled: true
        serviceName: immich-server-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 20s
      micro-metrics:
        enabled: true
        serviceName: immich-server-microservices-metrics
        endpoints:
          - port: microservices-metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 20s
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      library:
        type: persistentVolumeClaim
        existingClaim: immich-rw
        globalMounts:
          - path: *mediaLocation
      external:
        type: persistentVolumeClaim
        existingClaim: photos-rw
        globalMounts:
          - path: /data/external
