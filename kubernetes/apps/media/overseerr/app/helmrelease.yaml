---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app overseerr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      overseerr:
        containers:
          app:
            image:
              repository: ghcr.io/sct/overseerr
              tag: develop@sha256:b26858e0208989410996d744fd0840cbf7c3618a02f27f5b6da0f5abd4007f64
            env:
              LOG_LEVEL: info
              PORT: &port 5055
              TZ: "${TIMEZONE}"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 15m
                memory: 256M
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: [ALL]
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    ingress:
      app:
        className: external
        annotations:
          external-dns/is-public: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Overseerr"
          gethomepage.dev/group: "Media Management"
          gethomepage.dev/icon: "overseerr"
          gethomepage.dev/description: "Request management and media discovery tool."
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host "requests.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
            - *host
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /app/config
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/config/logs
      tmp:
        type: emptyDir
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
